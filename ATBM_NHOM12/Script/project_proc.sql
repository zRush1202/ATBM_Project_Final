alter session set "_ORACLE_SCRIPT"=true;
--drop user ADPRO cascade;
ALTER SESSION SET CONTAINER= atbm_projectfinal;
ALTER PLUGGABLE DATABASE OPEN;
SHOW CON_NAME; 
--SELECT sys_context('USERENV', 'CON_NAME') FROM dual;
CREATE USER ADPRO IDENTIFIED BY 123;
/
-- ADD ROLE MEMBER CHO ADMIN LÀ DBA
GRANT DBA TO ADPRO;
GRANT EXECUTE ANY PROCEDURE TO ADPRO;
--CẤP QUYỀN TRÊN TOÀN BỘ CONTAINER
GRANT CREATE SESSION TO ADPRO CONTAINER = CURRENT;
GRANT ALTER SESSION TO ADPRO;
/
-- Cấp quyền CONNECT, RESOURCE, UNLIMITED TABLESPACE, và SELECT ANY DICTIONARY cho ADPRO
GRANT CONNECT, RESOURCE TO ADPRO;
GRANT UNLIMITED TABLESPACE TO ADPRO;
GRANT SELECT ANY DICTIONARY TO ADPRO;
--GRANT GRANT ANY ROLE TO ADPRO;
-- Cấp quyền EXECUTE trên các gói và thủ tục cụ thể cho ADPRO
GRANT EXECUTE ON LBACSYS.SA_COMPONENTS TO ADPRO WITH GRANT OPTION;
GRANT EXECUTE ON LBACSYS.sa_user_admin TO ADPRO WITH GRANT OPTION;
GRANT EXECUTE ON LBACSYS.sa_label_admin TO ADPRO WITH GRANT OPTION;
GRANT EXECUTE ON sa_policy_admin TO ADPRO WITH GRANT OPTION;
GRANT EXECUTE ON char_to_label TO ADPRO WITH GRANT OPTION;

-- Thêm ADPRO vào vai trò LBAC_DBA
GRANT LBAC_DBA TO ADPRO;

-- Cấp quyền EXECUTE trên sa_sysdba và TO_LBAC_DATA_LABEL cho ADPRO
GRANT EXECUTE ON sa_sysdba TO ADPRO;
GRANT EXECUTE ON TO_LBAC_DATA_LABEL TO ADPRO;
/
GRANT SELECT, UPDATE, DELETE, INSERT on ADPRO.SINHVIEN to ADPRO;
CREATE OR REPLACE PROCEDURE ADPRO.check_user_or_role (p_name IN VARCHAR2, p_result OUT VARCHAR2) AS
  v_user_count NUMBER;
  v_role_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_user_count FROM DBA_USERS WHERE USERNAME = UPPER(p_name);
  SELECT COUNT(*) INTO v_role_count FROM DBA_ROLES WHERE ROLE = UPPER(p_name);

  IF v_user_count > 0 THEN
    p_result := 'User';
  ELSIF v_role_count > 0 THEN
    p_result := 'Role';
  ELSE
    p_result := 'CHƯA PHÂN LOẠI';
  END IF;
END;
/
CREATE OR REPLACE PROCEDURE ADPRO.USP_CREATEUSER_NHANVIEN
AUTHID CURRENT_USER AS
 CURSOR CUR IS (SELECT MANV
 FROM ADPRO.NHANSU
 WHERE MANV NOT IN (SELECT USERNAME
 FROM ALL_USERS)
 );
 STRSQL VARCHAR(2000);
 USR VARCHAR2(6);
BEGIN
 OPEN CUR;
 LOOP
 FETCH CUR INTO USR;
 EXIT WHEN CUR%NOTFOUND;

 STRSQL := 'CREATE USER '||USR||' IDENTIFIED BY '||USR;
 EXECUTE IMMEDIATE(STRSQL);
 STRSQL := 'GRANT CONNECT TO '||USR;
 EXECUTE IMMEDIATE(STRSQL);
 END LOOP;
 CLOSE CUR;
END;
/
CREATE OR REPLACE PROCEDURE ADPRO.USP_CREATEUSER_SINHVIEN
AUTHID CURRENT_USER AS
 CURSOR CUR IS (SELECT MASV
 FROM ADPRO.SINHVIEN
 WHERE MASV NOT IN (SELECT USERNAME
 FROM ALL_USERS)
 );
 STRSQL VARCHAR(2000);
 USR VARCHAR2(6);
BEGIN
 OPEN CUR;
 LOOP
 FETCH CUR INTO USR;
 EXIT WHEN CUR%NOTFOUND;
 STRSQL := 'CREATE USER '||USR||' IDENTIFIED BY '||USR;
 EXECUTE IMMEDIATE(STRSQL);
 STRSQL := 'GRANT CONNECT TO '||USR;
 EXECUTE IMMEDIATE(STRSQL);
 END LOOP;
 CLOSE CUR;
END;
/
begin
    ADPRO.USP_CREATEUSER_NHANVIEN;
    ADPRO.USP_CREATEUSER_SINHVIEN;   
end; 
